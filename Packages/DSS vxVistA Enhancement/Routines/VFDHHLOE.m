VFDHHLOE ;DSS/PDW - EDIT HL7 EDI TRANSPORT ;09 Mar 2011 13:31
 ;;2012.1.1;VENDOR - DOCUMENT STORAGE SYS;;24 Jun 2013;Build 136
 ;Copyright 1995-2013,Document Storage Systems Inc. All Rights Reserved
 ;DSS/BUILD - VFDHHL HL7 EXCHANGE 2012.1.1 * 06/23/15 * vxdev64v2k8_VX13 * 2012.1 T22
 ;DSS/BUILD - VFDHHL HL7 EXCHANGE 2012.1.1 * 02/02/14 * vxdev64v2k8_DEVXOS * 2012.1.1T21
EN ;EP EDI MAINTENANCE
 N VXMAP S VXMAP=0
 W !,"This enters/edits EDI transport architectures(s)"
 W !,?5,"1  Edit HL7 Exchange Demographics"
 W !,?5,"2  Edit Data Types & Tranforms"
 W !,?5,"3  Edit Elements within Segments"
 W !,?5,"4  Edit Tables"
 W !,?5,"5  Edit Table Row"
 ;W !,?5,"6  Print Segment Element Definitions"
 W !,?5,"6  Print Table Entries"
 W !,?5,"7  Code Generation for Routine Insertion"
 W !,?5,"8  Merge a table from a cut and paste Excel sheet"
 W !,?5,"9  Analyze code from a Message"
 W !,?5,"10 Field Map Edit"
 W !,?5,"11 Map Field Add"
 W !,?5,"12 HL7 Utilities"
 S X="VFDHHLMP" X ^%ZOSF("TEST") I $T S VXMAP=2
 N LAST S LAST=12
 K DIR S DIR(0)="NO^1:"_LAST_":0" D ^DIR K DIR
 S Y=+X
 I Y'>0 W !,"None Selected - Exiting",! H 2 D EXIT Q
 K DA,DR,DDSFILE
 I Y=1 D DEMOG D EXIT G EN
 I Y=2 D EDTDATA D EXIT G EN
 I Y=3 D EDTELEM D EXIT G EN
 I Y=4 D EDTTAB D EXIT G EN
 I Y=5 D EDTABROW D EXIT G EN
 ;I Y=6 D PRTDEFS D EXIT G EN
 I Y=6 D TABPRT D EXIT G EN
 I Y=7 D PRTVARS D EXIT G EN
 I Y=8 D TABLOADT D EXIT G EN
 I Y=9 D READMSG^VFDHHL03 D EXIT G EN
 ;I Y=10 D EN^VFDHHLMP D EXIT G EN
 I Y=10 D ELMTMAP D EXIT G EN
 I Y=11 D MAPFLDAD D EXIT G EN
 I Y=12 D ^VFDHHLUT D EXIT G EN
 Q
SELTRAN() ;EP SELECT TRANSPORT
 N DIC,Y
 S DIC=21625.01,DIC(0)="AQEML"
 D ^DIC
 Q +Y
 ;
SELELMT(X1,X2)          ;EP SELECT SEGMENT GIVEN TRANSPORT
 N DA,DIC,Y,IENS
 W !,"Transport: ",?20,$$GET1^DIQ(21625.01,X1,.01)
 K DA S DA=X2,DA(1)=X1,IENS2=$$IENS^DILF(.DA)
 W !,"Segment:",?20,$$GET1^DIQ(21625.0101,IENS2,.01)
 W !,?5,"Only items with variables named may be selected."
 W !,?5,"otherwise there may be over three hundred to chose from."
 K DA S DA(1)=X2,DA(2)=X1,IENS=$$IENS^DILF(.DA) ;no DA
 S DIC=$$ROOT^DILFD(21625.0102,IENS),DIC(0)="AEQM"
 S ROOT=$$ROOT^DILFD(21625.0102,IENS,1)
 S D="AD"
 S DIC("S")="I $P(^(0),U,8)'="""" ;!($P(^(1),U))"
 S DIC("W")="W ?35,$E($P(^(0),U,2),1,18),?55,$E($P(^(0),U,8),1,18)"
 S DIC("W")=DIC("W")_" I $D(^(1)) W ?75,""M"""
 ;S DIC("W")="I $D(^VFDH(21625.01,DA(1),10,""D"")) W ?30,""*"""
 D IX^DIC
 Q +Y
SELSEG(X)          ;EP SELECT SEGMENT GIVEN TRANSPORT
 N DA,DIC,Y,IENS
 S DA(1)=X,IENS=$$IENS^DILF(.DA)
 W !!,"Transport: ",$$GET1^DIQ(21625.01,X,.01)
 S DIC=$$ROOT^DILFD(21625.0101,IENS),DIC(0)="AEQML"
 ;S DIC("W")="I $D(^VFDH(21625.01,DA(1),10,""D"")) W ?30,""*"""
 D ^DIC
 Q +Y
 ;
SELTAB(X)          ;EP SELECT TABLE GIVEN SYSTEM
 N DA,DIC,Y,IENS
 S DA(1)=X,IENS=$$IENS^DILF(.DA)
 W !,"Transport: ",$$GET1^DIQ(21625.01,X,.01)
 S DIC=$$ROOT^DILFD(21625.0105,IENS),DIC(0)="AEQML",DIC("W")="W ?25,$P(^(0),U,2),?55,$P($G(^(11)),U,1)"
 D ^DIC
 Q +Y
SELROW(X,X1) ;EP SELECT TABLE ROW GIVEN SYSTEM & TABLE
 N DA,DIC,Y,IENS
 S DA=X1,DA(1)=X,IENS=$$IENS^DILF(.DA)
 W @IOF,!,"Transport: ",$$GET1^DIQ(21625.01,X,.01)
 W !,"Table: ",?12,$$GET1^DIQ(21625.0105,IENS,.01)
 S IENS=","_IENS
 S DIC=$$ROOT^DILFD(21625.0106,IENS),DIC(0)="AEQML",DIC("W")="W ?40,$P(^(0),U,2)"
 K DA S DA(2)=X,DA(1)=X1
 D ^DIC
 Q +Y
DEMOG ;EP EDIT DEMOGRAPHICS OF TRANSPORT
 N X1
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . S DA=X1,IENS=$$IENS^DILF(.DA)
 . S DA=X1,DDSFILE=21625.01,DR="[VFDHHLO HL7 DEMOGRAPHICS]" D ^DDS
 D EXIT
 Q
EDTELEM ;EP EDIT ELEMENTS
 N X1,X2
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELSEG(X1) Q:X2'>0  D
 .. S DA=X2,DA(1)=X1,DR="[VFDHHLO ELEMENTS EDIT]"
 .. S DDSFILE=21625.01,DDSFILE(1)=21625.0101
 ..D ^DDS
 D EXIT
 Q
MAPEDIT ;EP EDIT ELEMENTS
 N X1,X2,X3,HLYIENS,SEGIENS,ELMIENS
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELSEG(X1) Q:X2'>0  D
 .. F  S X3=$$SELELMT(X1,X2) Q:X3'>0  D MAPDSPED
 Q
MAPDSPED ; DISPLAY EDIT MAP
 S HL7IENS=X1_",",SEGIENS=X2_","_X1_","
 S DA=X3,DA(1)=X2,DA(2)=X1
 S ELMIENS=$$IENS^DILF(.DA)
 S HL7NM=$$GET1^DIQ(21625.01,HL7IENS,.01)
 S SEGNM=$$GET1^DIQ(21625.0101,SEGIENS,.01)
 S ELMNM=$$GET1^DIQ(21625.0102,ELMIENS,.01)
 ;D DIQDISP(21625.0102,IENS,".01;.02;.03;.08;1.01")
 K DIC,DIE S DIE=$$ROOT^DILFD(21625.0102,ELMIENS)
 K CVALS
 D MAPDISP
MAPREDO ;
 S DR="1.01;10"  D ^DIE,MAPDISP
 K DIR S DIR(0)="S^E:EDIT;Q:QUIT",DIR("B")="Q" D ^DIR
 Q:Y="Q"
 G MAPREDO
MAPDISP ; DISPLAY ELEMENT MAP
 N FLDS
 W !!,"HL7 Exchange:",?20,HL7NM
 W !,"Segment:",?20,SEGNM
 S FLDS=".01;.02;.08;1.01;10*" K CVALS
 D GETS^DIQ(21625.0102,ELMIENS,FLDS,"","CVALS","MSG")
 ;D Q("CVALS")
 M FLD=CVALS(21625.0102,ELMIENS) ;fld(.01)="5.1.1.0"
 W !,?20,FLD(.01),?30,FLD(.02),?60,FLD(.08)
 W !!,"vxVista Map",?20,FLD(1.01)
 S NODE="CVALS(21625.0107)"
 W:$D(CVALS(21625.0107)) !,"Other Maps"
 F  S NODE=$Q(@NODE) Q:'$L(NODE)  W ?20,@NODE,!
 W "= = = ="
 Q
ELMTMAP ;EP MAP ELEMENTS
 N X1,X2
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELSEG(X1) Q:X2'>0  D
 .. ;S DA=X2,DA(1)=X1,DR="[VFDHLZMAP ELEMENTS EDIT]"
 .. S DA=X2,DA(1)=X1,DR="[VFDHHLO VXVISTA MAPPING]"
 .. S DDSFILE=21625.01,DDSFILE(1)=21625.0101
 .. D ^DDS
 D EXIT
 Q
ZELMTMAP ;EP MAP ELEMENTS
 N X1,X2
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELSEG(X1) Q:X2'>0  D
 .. F  S X3=$$SELELMT(X1,X2) Q:X3'>0  D
 ... S DA=X3,DA(1)=X2,DA(3)=X1,DR="[VFDHTST VXVISTA MAPPING]"
 ... S DDSFILE=21625.01,DDSFILE(1)=21625.0101
 ..D ^DDS
 D EXIT
 Q
MAPFLDAD ; add vxVista fields to Mapping table
 D ^VFDHHLMP
 Q
EDTTAB ;EP EDIT Entries of a Table
 N X1,X2
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELTAB(X1) Q:X2'>0  D
 .. S DA=X2,DA(1)=X1,DR="[VFDHHLO EDI TABLE ID EDIT]"
 .. S DDSFILE=21625.01,DDSFILE(1)=21625.0105
 ..D ^DDS
 D EXIT
 Q
EDTABROW ;EP EDIT TABLE ROW
 N X1,X2,X3,DIC,DR,DIE,DIR,DA
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELTAB(X1) Q:X2'>0  D
 .. D ROWTABED(X1,X2)
 .. Q
 ;D EXIT
 Q
ROWTABED(VFDHSYS,VFDHTAB) ;pass in system and table to edit a table row
 N SYSDA,TABDA,FLDS,DR,DA,DIC,DIE,TABDA,ROWDA,SYSDA,LINE,FLD,CC,CVALS
 I VFDHSYS'=+VFDHSYS S SYSDA=$$FIND1^DIC(21625.01,"","XM",VFDHSYS) S VFDHSYS=SYSDA
 I 'VFDHSYS Q
 S SYSDA=VFDHSYS
 K DA
 S DA(1)=SYSDA S IENS=$$IENS^DILF(.DA)
 S TABDA=VFDHTAB
 I TABDA'=+VFDHTAB S TABDA=$$FIND1^DIC(21625.0105,IENS,"XM",VFDHTAB)
 I TABDA'>0 Q
 S ROWDA=$$SELROW(SYSDA,TABDA) Q:ROWDA'>0
 I '$D(LINE) S $P(LINE,"=",79)=""
 K DA
 S DA=TABDA,DA(1)=SYSDA S IENS=$$IENS^DILF(.DA)
 S CC=$$GET1^DIQ(21625.0105,IENS,.06)
 K DA
 S DA=ROWDA,DA(1)=TABDA,DA(2)=SYSDA S IENS=$$IENS^DILF(.DA)
 S (DR,FLDS)=".01;.02;.03;.04;.05"
 I $L(CC) W !,LINE,!,"Alternate Item Names:",!,CC
 D ROWDISP
LOOPED K DIC,DIE S DIE=$$ROOT^DILFD(21625.0106,IENS)
 S (DR,FLDS)=".01;.02;.03;.04;.05" D ^DIE
 I $L(CC) W !,LINE,!,"Alternate Item Names:",!,CC
 D ROWDISP
 K DIR S DIR(0)="YO",DIR("A")=" Is the above correct ? Y/N " D ^DIR
 I +Y=1 Q
 I X="^" Q
 G LOOPED
ROWDISP ;
 K FLDS
 I '$D(LINE) S $P(LINE,"=",79)=""
 W !,LINE
 K DA
 S DA=ROWDA,DA(1)=TABDA,DA(2)=SYSDA S IENS=$$IENS^DILF(.DA)
 S FLDS=DR
 K CVALS
 D GETS^DIQ(21625.0106,IENS,FLDS,"","CVALS","MSG")
 K VCUR
 ;display blanks if entry deleted
 I $D(CVALS) M VCUR=CVALS(21625.0106,IENS) I 1
 E  N I F I=1:1 S FLD=$P(FLDS,";",I) Q:FLD'>0  S VCUR(FLD)=""
 S FLD=0 F  S FLD=$O(VCUR(FLD)) Q:FLD'>0  D
 . D FIELD^DID(21625.0106,FLD,"","LABEL","NM")
 . W !,NM("LABEL"),?30,$G(VCUR(FLD))
 W !,LINE
 Q
EDTVROU ;EP EDIT VARIABLE ROUTINES
 N X1
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . S DA=X1,DDSFILE=21625.01,DR="[BAR PROCESS VARIABLE EDIT]" D ^DDS
 D EXIT
 Q
EDTDATA ;EP EDIT  DATA TYPES & CONVERSIONS
 N X1
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . S DA=X1,DDSFILE=21625.01,DR="[VFDHHLO EDIT DATA TYPES]" D ^DDS
 D EXIT
 Q
EDTSEG ;EP EDIT SEGMENTS
 N X1,DA
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . S DA=X1,DDSFILE=21625.01,DR="[VFDHHLO EDIT SEGMENTS OF TRANSPORT]" D ^DDS
 D EXIT
 Q
TABPRT ;Select HL7 Exchange, Table, and print entries
 K VFDHSTOP
 N VFDHSYS,DA,DIC,VFDHTAB,VFDHROW,XX,DSISYSNM,TABNM,TAB,DESC,TABCODE,ID,EHR,PGCNT,CNT,HCNT
 D:'$D(VFDHDSYS) INIT
 N X1,VFDHROU
 S VFDHROU="QTABPRT^VFDHHLOE"
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . S VFDHSYS=X1
 . S DSISYSNM=$$GET1^DIQ(21625.01,VFDHSYS,.01)
 . S DA(1)=VFDHSYS,IENS=$$IENS^DILF(.DA)
 . S DIC=$$ROOT^DILFD(VFDHDTAB,IENS),DIC(0)="AEQM",DIC("W")="W ?40,$P(^(0),U,2)"
 . F  D ^DIC Q:Y'>0  S VFDHTAB=+Y D DEVPRT
 D EXIT
 Q
QTABPRT ;deque/ or print Table Contents
 N TABDESC,ID,DESC,EHR,SYN,TXT
 S XX=^VFDH(21625.01,VFDHSYS,30,VFDHTAB,0)
 S TABNM=$P(XX,U),TABDESC=$P(XX,U,2),TABCODE(1)=$P(XX,U,3),TABCODE(2)=$P(XX,U,4)
 W "HL7",U,"DEFINITION",U,"EMR VAL",U,"COL 4",U,"COL 5"
 S IEN=0 F  S IEN=$O(^VFDH(21625.01,VFDHSYS,30,VFDHTAB,10,IEN)) Q:IEN'>0  S XX=^(IEN,0) D  Q:$G(VFDHSTOP)
 . S ID=$P(XX,U),DESC=$P(XX,U,2),EHR=$P(XX,U,3),SYN=$P(XX,U,4),TXT=$P(XX,U,5)
 . W !,$E(ID,1,13),U,DESC,U,EHR,U,SYN,U,TXT
 Q
 ;
PRTDEFS ;EP PRINT SEGMENT ELEMENT DEF
 N X1,VFDHROU
 S VFDHROU="SYSPVAR^VFDHHLOE"
 F  S X1=+$$SELTRAN() Q:X1'>0  S VFDHSYS=X1 D DEVPRT
 D SEGVSUM
 D EXIT
 Q
PRTVSUM ;EP PRINT VARIABLES SUM
 N X1,VFDHROU
 S VFDHROU="SYSVSUM^VFDHHLOE"
 F  S X1=$$SELTRAN() Q:X1'>0  S VFDHSYS=X1 D DEVPRT
 D EXIT
 Q
SYSPVAR D SYSPVARS(VFDHSYS)
 D EXIT
 Q
SYSPVARS(VFDHSYS) ;
 N VFDHSTOP,PGCNT,DSISEGNM,HDR,HDR1
 K ^TMP($J)
 D:'$D(VFDHDSYS) INIT
 S DSISYSNM=$$GET1^DIQ(VFDHDSYS,VFDHSYS,.01)
 S HDR1="Segment-Element Definitions: "_DSISYSNM,HDR=HDR1
 D PGHDR
 S DSISEGNM="" F  S DSISEGNM=$O(^VFDH(21625.01,VFDHSYS,10,"B",DSISEGNM)) Q:DSISEGNM=""  D  Q:$G(VFDHSTOP)
 .D SEGPRT(VFDHSYS,DSISEGNM)
 D SEGVSUM ; 
 D EXIT
 Q
SEGPRT(VFDHSYS,DSISEGNM) ;
 N DEF,IEN,VFDHSEG,ELMNM
 K DEF
 S DSISYSNM=$$GET1^DIQ(21625.01,VFDHSYS,.01)
 K DEF("B")
 D SEGDEF^VFDHHLOT(VFDHSYS,DSISEGNM,.DEF) ; creates DEF(IEN,FLD)=Value
 ;create alpha B quick index  DEF("B",NM)=IEN
 W !!,DSISEGNM,?10,DSISYSNM
 S HDR=DSISYSNM_" Segment: "_DSISEGNM
 S IEN=0 F  S IEN=$O(DEF(IEN)) Q:IEN'>0  S DEF("B",$$PAD^VFDHHLOT(DEF(IEN,.01)))=IEN
 S ELMNM="" F  S ELMNM=$O(DEF("B",ELMNM)) Q:ELMNM=""  S IEN=DEF("B",ELMNM) D ELMPRT(IEN) Q:$G(VFDHSTOP)
 K DEF("B")
 Q
ELMPRT(IEN) ;
 Q:$G(VFDHSTOP)
 D PG Q:$G(VFDHSTOP)
 W !,?3,DEF(IEN,.01),?12,DEF(IEN,.02),?45,DEF(IEN,.04),?55,DEF(IEN,.08),?75,DEF(IEN,.07)
 I $L(DEF(IEN,.08)) S ^TMP($J,DSISEGNM,DEF(IEN,.08))=DEF(IEN,.02)
 Q
DEVPRT ; GET DEVICE (QUEUEING ALLOWED)
 W !
 S %ZIS="Q"
 D ^%ZIS
 I POP W !!,"NO Device Selected",! K DIR S DIR(0)="E",DIR("A")="<CR> - CONTINUE" D ^DIR Q
 I $D(IO("Q")) D  S QFLG=1 Q
 . S ZTRTN=@VFDHROU,ZTIO=ION,ZTDESC="VFDHHL7 PRINT",ZTSAVE("VFDH*")=""
 . D ^%ZTLOAD
 . W !!,$S($D(ZTSK):"Request queued! "_ZTSK,1:"Request cancelled!")
 . D ^%ZISC
 . KILL ZTSK,IO("Q")
 . KILL ZTIO ; ^%ZTLOAD kills other ZT* variables, but not this one
 . Q
 U IO D @VFDHROU D ^%ZISC
 K DIR S DIR(0)="E",DIR("a")="<CR> - Continue" D ^DIR K DIR
 Q
SEGVSUM ; print programmer cut/pastable list of variables.
 N SEG,VAR,XX
 S SEG=0 F  S SEG=$O(^TMP($J,SEG)) Q:SEG=""  D
 . W !,SEG," ;" S VAR="",XX=" ;K " F  S VAR=$O(^TMP($J,SEG,VAR)) D  Q:VAR=""
 .. I VAR="",XX["," W !,XX Q
 .. S XX=XX_VAR_"," I $L(XX)>70 W !,XX S XX=" ;K "
 K ^TMP($J)
 D EXIT
 Q
PRTVARS ; print capturE varS lists of defs and Kills
 ;for insertion into code.
 N HL7SYS,SEGNUM,DEF,CNT,HCNT,VFDHL16
 S HL7SYS=$$SELTRAN Q:'HL7SYS
 ; select HL 1.6 or HLO
 K DIR,VFDHL16 S DIR(0)="SO^1:HL 1.6;2:HLO",DIR("A")="Select HL7 ",DIR("B")="HL 1.6"
 D ^DIR I Y=1 S VFDHL16=1 ; set format to HL 1.6
 K DIR S DIR(0)="YO",DIR("A")="Print All Segments ",DIR("B")="NO" D ^DIR G:Y>0 PRTALLV
 F  S SEGNUM=$$SELSEG(HL7SYS) Q:SEGNUM'>0  D  K DIR S DIR(0)="E",DIR("A")="<CR> - CONTINUE" D ^DIR
 . D VARSPRT(HL7SYS,SEGNUM)
 D EXIT Q
PRTALLV ; print all segment variables
 S SEGNM=0 F  S SEGNM=$O(^VFDH(21625.01,HL7SYS,10,"B",SEGNM)) Q:SEGNM=""  D
 . S SEGNUM=$O(^VFDH(21625.01,HL7SYS,10,"B",SEGNM,0))
 . I '$D(^VFDH(21625.01,HL7SYS,10,SEGNUM,10,"C")) Q
 . D VARSPRT(HL7SYS,SEGNUM)
 K DIR S DIR(0)="E",DIR("A")="<CR> - CONTINUE" D ^DIR
 D EXIT
 Q
VARLIST ;
 N HL7SYS,SEGNUM,DEF,CNT,HCNT,VFDHL16
VARLISTQ ;
VARLIST1 S HL7SYS="",HL7SYS=$$SELTRAN() Q:'HL7SYS
VARLIST2 S SEGNUM="",SEGNUM=$$SELSEG(HL7SYS) I 'SEGNUM G VARLIST1
 D VARLISTP(HL7SYS,SEGNUM) D E
 G VARLIST2
 Q
VARLISTP(HL7SYS,SEGNUM) ;
 N VNM
 N DEF,VAR
 I HL7SYS'=+HL7SYS S HL7SYS=$$FIND1^DIC(21625.01,"","XM",HL7SYS)
 S IEN=SEGNUM_","_HL7SYS_"," S SEGNM=$$GET1^DIQ(21625.0101,IEN,.01)
 D SEGDEF^VFDHHLOT(HL7SYS,SEGNM,.DEF)
 S IEN=0 F  S IEN=$O(DEF(IEN)) Q:IEN'>0  D
 . S $P(DEF(IEN,.01),".")=$P(DEF(IEN,.01),".")-1
 . S:$L(DEF(IEN,.08)) DEF("VLST",IEN)="",DEF("VARNM",DEF(IEN,.08))=DEF(IEN,.02),DEF("VARN",$P(DEF(IEN,.08),"("))=""
 Q:'$D(DEF("VLST"))
 S IEN=0 F  S IEN=$O(DEF("VLST",IEN)) Q:IEN'>0  D
 . W !,DEF(IEN,.01),?12,DEF(IEN,.02) ;,?32,DEF(IEN,.04) W:DEF(IEN,.07)["Y" ?40,"R" W ?43,DEF(IEN,.08)
 Q
VARSPRT(HL7SYS,SEGNUM) ;,
 N VNM
 D
 .N DEF,VAR
 .I HL7SYS'=+HL7SYS S HL7SYS=$$FIND1^DIC(21625.01,"","XM",HL7SYS)
 .S IEN=SEGNUM_","_HL7SYS_"," S SEGNM=$$GET1^DIQ(21625.0101,IEN,.01)
 .D SEGDEF^VFDHHLOT(HL7SYS,SEGNM,.DEF)
 .S IEN=0 F  S IEN=$O(DEF(IEN)) Q:IEN'>0  D
 .. S:$L(DEF(IEN,.08)) DEF("VLST",IEN)="",DEF("VARNM",DEF(IEN,.08))=DEF(IEN,.02),DEF("VARN",$P(DEF(IEN,.08),"("))=""
 .Q:'$D(DEF)
 .W !," ;",SEGNM
 . W !,SEGNM,"SEG"," ;set variables, load segment array, load array into HL7 message"
 .; new variables
 .S VAR="",XX=" N " F  S VAR=$O(DEF("VARN",VAR)) D  Q:VAR=""
 .. I VAR="",$L($P(XX," N ",2)) W !,XX Q
 .. I VAR["*" Q
 ..I XX=" N ",$L(VAR) S XX=XX_VAR
 ..E  S:$L(VAR) XX=XX_","_VAR
 ..I $L(XX)>60 W !,XX S XX=" N "
 . Q:'$D(DEF("VLST"))
 . W !," D ",SEGNM,"VARS"
 . I $G(VFDHL16) W !," D ADDHL16^VFDHHLOT(VFDHLTMP,.VFDHL16) ;HL1.6" I 1
 . E  W !," S X=$$ADDSEG^HLOAPI(.HLMSTATE,.SEG) ;HLO"
 . W !," K SEG"
 . W !," Q",!," ;"
 . W !,SEGNM,"VARS"," ; set variables for segment ",SEGNM
 . I $G(VFDHL16) W !," ; @VFDHLTMP@ is to be the HL16 total array location is 'REQUIRED'"
 . W !," ;Sequence",?12,"Name",?45,"Type",?55,"Variable",?73,"Rep",?77,"Req"
 . S IEN=0 F  S IEN=$O(DEF("VLST",IEN)) Q:IEN'>0  D
 . . I DEF(IEN,.08)="X" S DEF(IEN,.08)=""
 . . ;W !," ;",DEF(IEN,.01),?12,DEF(IEN,.08),?32,DEF(IEN,.04) W:DEF(IEN,.07)["Y" ?40,"R" W ?43,DEF(IEN,.02)
 . . W !," ;",DEF(IEN,.01),?12,DEF(IEN,.02),?45,DEF(IEN,.04),?55,DEF(IEN,.08) W:DEF(IEN,.07)["Y" ?73,"R" D
 . . . W ?77,$E($G(DEF(IEN,.05)))
 . W !," ;Use @VAR@(""HL"")=VALUE to bypass FM to HL7 transform",!," ;"
 . W !," K SEG,VFDSEG N VFDSEG"
 . S IEN=0 F  S IEN=$O(DEF("VLST",IEN)) Q:IEN'>0  D
 . . S VNM=DEF(IEN,.08) Q:VNM=""  S:DEF(IEN,.07)["Y" VNM=$NA(@VNM@(1))
 . . W !," S ",VNM,"="""""
 . W !," D SEGSET^VFDHHLOT(""",$$GET1^DIQ(21625.01,HL7SYS_",",.04),""",""",SEGNM,""",.VFDSEG)"
 . I $G(VFDHL16) D
 ..;lines added for HL16
 .. W !," N VFDSGMNT"
 .. W !," D BUILD^VFDHHLOT(.VFDSGMNT,.VFDSEG) ; assemble array VFDSEG into one VFDSGMNT"
 .. W !," D SPLIT^VFDHHLOT(.VFDHL16,VFDSGMNT) ; split VFDSGMNT into 240 length array elements"
 . W !," Q",!," ;"
 .Q
 .S VAR="",I=0 F  S VAR=$O(DEF("VARNM",VAR)) Q:VAR=""  S I=I+1,DEF("I",I)=VAR
 .S CNT=I,HCNT=CNT\2
 .F I=1:1:HCNT W !," ;",DEF("I",I),?12,DEF("VARNM",DEF("I",I)),?41,DEF("I",I+HCNT),?61,DEF("VARNM",DEF("I",I+HCNT))
 .I CNT=2*HCNT Q
 .W !," ;",DEF("I",I),?12,DEF("VARNM",DEF("I",I))
 Q
TABDEL ; Manually delete the contents of a table
 N X1,X2,DA,IENS,DIK,DIR,G
 F  S X1=$$SELTRAN() Q:X1'>0  D
 . F  S X2=$$SELTAB(X1) Q:X2'>0  D
 .. K DIR S DIR(0)="YO",DIR("A")="Delete Contents of Table ",DIR("B")="N"
 .. D ^DIR I Y'>0 Q
 .. S DA(1)=X2,DA(2)=X1,IENS=$$IENS^DILF(.DA)
 .. S G=$NA(^VFDH(21625.01,X1,30,X2,10))
 .. S DIK=$$ROOT^DILFD(21625.0106,IENS)
 .. S DA=0 F  S DA=$O(@G@(DA)) Q:DA'>0  D ^DIK W "."
 .. D E
 Q
READMSG ;READ/PARSE/TRANSLATE A MESSAGE
 D READMSG^VFDHHLOT
 Q
PG ;PAGE HANDLER
 Q:$G(VFDHSTOP)
 I (IOSL-$Y)>3 Q
 I $E(IOST)="C" K DIR S DIR(0)="E",DIR("A")="'^' - STOP  <CR> - CONTINUE" D  Q:$G(VFDHSTOP)
 .D ^DIR I 'Y S VFDHSTOP=1
PGHDR ;
 S PGCNT=$G(PGCNT)+1
 W @IOF,!,$G(HDR),?70,"Pg: ",$G(PGCNT),!
 Q
INIT ;save HL7 Exchange file DD multiples' numbers into easy variables VFDHd*
 S VFDHDSYS=21625.01,VFDHDSEG=19670.101,VFDHDELM=21625.0102,VFDHDTYP=21625.0104
 S VFDHDTAB=21625.0105,VFDHDTRW=21625.0106,VFDHDVAR=21625.0111
 Q
EXIT ; KILL VARIABLES
 K VFDHDSYS,VFDHDTAB,VFDHDSEG,VFDHDELM,VFDHDTYP,VFDHDTRW,VFDHDVAR,VFDHSEG,DSISEGNM,VFDHSYS,DSISYSNM
 K DIE,DR,DLAYGO,QFLG,CNT,HCNT,I,S
 K %ZIS,POP,YOUT,ZTRTN,ZTDESC,ZTSAVE
 Q
TABLOADT ; entry to load a table from and excel sheet; 5 columns
 D CHUILOAD^VFDHHL01 ; READ EXCELL TABLE
 ; Insert special one time conversions here
 ;D QUESTMAP^VFDHHL01 ;VXRESULT Quest Mapping VXRESULT Specimens to site
TL ;
 N FDA,TABIENS,LC,T,ID,CLNM,IEN60,VXNM,SPEC,FDA,VIEN,MSG
 N NC,SYSDA,SYSNM,TABDA,IENS,TABNM,G,I,LC,XX,YY,Z
 S NC=$O(^TMP("VFDHCHUI",$J,"A"),-1) I NC'>0 W !,"NO TABLES LOADED: - QUITING",! Q
POSTROU ;
 K DIR S DIR(0)="FO",DIR("A")="Enter a post conversion TAG'|'ROUTINE if needed",DIR("B")="" D ^DIR
 I $L(Y)>0 S (Y,X)=$TR(Y,"|","^"),X=$P(X,"^",2) X ^%ZOSF("TEST") I $T'=1 W !,X," Not FOUND" G POSTROU
 I $L(Y) W !,Y," Being executed" D @Y W !,Y," Executed"
 S G=$NA(^TMP("VFDHCHUI",$J))
TABMERGE ; entry with G defined elsewhere @G@(ln,0)=A<tab>B<tab>;
 ;called by VFDHHL60 to take entries from scratch table into HL7 X tables
POSTCONT S SYSDA=$$SELTRAN() I SYSDA'>0 W !,"NO TRANSPORT SELECTED - QUITING" Q
 S SYSNM=$$GET1^DIQ(21625.01,SYSDA,.01)
 S TABDA=$$SELTAB(SYSDA) I TABDA'>0 W !,"NO TABLE SELECTED - QUITING" Q
 K DA S DA=TABDA,DA(1)=SYSDA S IENS=$$IENS^DILF(.DA)
 S TABNM=$$GET1^DIQ(21625.0105,IENS,.01)
 W !,"SYSTEM: ",?10,SYSNM,!,"TABLE:",?10,TABNM
 W !,"WILL BE MERGED WITH:",!
 F I=1:1:5 W !,"ROW  ",I,!,@G@(I,0) Q:'$D(@G@(I+1,0))
 K DIR S DIR(0)="YO",DIR("A")="IS THE ABOVE CORRECT ?",DIR("B")="N"
 D ^DIR I Y'=1 W !,"QUITING",!
 ; table in , readying rows for ?+ MERGING.
 N TABGL S TABGL=$$ROOT^DILFD(21625.0106,","_IENS,1)
 S TABIENS=IENS
 S LC=0 F  S LC=$O(@G@(LC)) Q:LC'>0  S XX=@G@(LC,0) D FILEROW
 Q
TABLOADH ; Load table from host file
 N PATH,GLIST,FLIST,GBL,FNAME,GBL1
TLHLOOP ;This is not yet enabled for VFDHHL
 Q
 K DIR S DIR(0)="F0",DIR("A")="Enter host file folder (with trailing \ or /) ",DIR("B")=$$PWD^%ZISH
 I $L(Y)'>3 W !,"No HFS provided - Quiting"  D E Q
 S PATH=Y
 K DIR S DIR(0)="FO",DIR("A")="Enter file name to be loaded " D ^DIR
 I $L(Y)'>3 W !,"No file name given - Quiting" D E Q
 S FNAME=Y
 S GBL1=$NA(^TMP("VFDHHLTAB",$J,1))
 K ^TMP("DISCHLTAB",$J)
 ; NEEDING FURTHER WORK
 S X=$$FTG^%ZISH(PATH,FNAME,GBL1,3)
 I X=0 W !,PATH,FNAME," COULD NOT BE LOADED !" D E G TLHLOOP
 ;D LIST^DSICHFS(PATH,FILE,GLIST,FLIST)
 Q
FILEROW ;
 N MSG,FDA,VIEN,VXIEN
 F YY="ID=1","CLNM=2","VXIEN=3","VXNM=4","SPEC=5" D GET(XX,$C(9),YY)
 S IENS="?+1,"_TABIENS
 S Z(.01)=ID,Z(.02)=CLNM,Z(.03)=VXIEN,Z(.04)=VXNM,Z(.05)=SPEC
 ;MERGE nulls not to overwrite existing values
 S FLD=0 F  S FLD=$O(Z(FLD)) Q:FLD'>0  I Z(FLD)="" K Z(FLD)
 M FDA(21625.0106,IENS)=Z
 D UPDATE^DIE("S","FDA","VIEN","MSG")
 I $D(MSG) D Q("MSG"),Q("FDA"),Q("VIEN") D E
 K MSG,FDA
 Q
GET(REC,DLM,XX) ; where XX = VAR_"="_I  ex: XX="PATNM=1"
 ; Set VAR = piece I of REC using delimiter DLM
 N Y,I S Y=$P(XX,"="),I=$P(XX,"=",2),@Y=$P(REC,DLM,I)
 Q
SET(REC,DLM,XX) ; where XX = VAR_U_I  ex: XX="1=PATNUM"
 ; Set VAR into piece I of REC using delimiter DLM
 N Y,I S I=$P(XX,"="),Y=$P(XX,"=",2)
 I Y'=+Y,Y'="" S $P(REC,DLM,I)=$G(@Y) I 1
 E  S $P(REC,DLM,I)=YOUT ;
 Q
E N DIR S DIR(0)="EO",DIR("A")="<CR> - Continue" D ^DIR
 Q
Q(VAL) ; DISPLAY VAR WITH $Q
 N X,X1 S (X,X1)=VAL
 Q:'$D(@VAL)
 I $E(X,$L(X))=")" S X1=$E(X,1,$L(X)-1)
 I $D(@X)#10 W !,X,"=",@X
 F  S X=$Q(@X) Q:X'[X1  W !,X,"=",@X
 Q
HISTORY ;
HST1 ;Moved to VFDHHL
HST2 ;
 ;6 APR 11 adjust variable names in printing code for a segment
 ;12 APR 11 added ^VFDHHLUT HL7 Utilities to menu
 ;22 JUNE 11 removed @IOF from SELSEG
 ;19 AUG 11 added tabrowedit of field .06 TEXT2
