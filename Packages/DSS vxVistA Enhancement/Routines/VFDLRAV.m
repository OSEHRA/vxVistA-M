VFDLRAV ;DSS/FHS - LAB AUTO-VERIFY; 5/2/12 12:05pm ; 8/10/12 10:17am
 ;;2013.1;VENDOR - DOCUMENT STORAGE SYS;**16**;05 May 2014;Build 2
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
 ;VFD LAB ENHANCE 2012.0
 Q
EN ;
 ;
ONE(LRLL,LRISQN,SAVELAHONEXIT) ;
 ; Inputs
 ;           LRLL: ^LAH ien #1
 ;         LRISQN: ^LAH ien #2
 ;  SAVELAHONEXIT:<opt><dflt=0> If true, LAH wont be deleted.
 I '$$ISAAON(LRLL) Q 0  ;Check to see IF worklist is set to Auto-Verify
EN1 ;
 K LREND S LREND=0
 K ^TMP("LR",$J)
 N A,AGE,C,CLIA,CNT,CORRECT,DFN,DIC,DIERR,DIQUIET
 N DOB,DOD,DUZ,EAMODE,ERR,FLD,I,IEN,J,LNC,LRA,LRAA
 N LRAD,LRAL,LRALERT,LRAN,LRANYAA,LRARDT,LRAV0,LRAV63
 N LRAV68,LRAV69,LRAVAL,LRAVEOL,LRAVUS,LRBEY
 N LRBLOOD,LRCAPMS,LRCAPWA,LRCDEF,LRCDEF0,LRCDER
 N LRCDT,LRCEN,LRCFL,LRCNT,LRCODE,LRCOM,LRDATE
 N LRDFN,LRDINST,LRDOC,LRDPF,LRDT0,LRDUZ
 N LREOL,LRERR,LRFDA,LRFNUM,LRGTN,LRI,LRIDT,LRINST,LRIEN
 N LRINTYPE,LRLABKY,LRLCT,LRLD,LRLOCK1,LRLLOC
 N LRLSCP,LRLWC,LRM,LRMETH,LRNAME,LRNLT,LRNOCODE
 N LRNODE,LRNT,LRNTN,LRNX,LRODT,LROLLOC,LRORD,LRORIFN,LRORU3,LRORDR
 N LRP,LRPANEL,LRPARAM,LRPCEVSO,LRPER,LRPL
 N LRPLASMA,LRPRAC,LRPRACX,LRPROF,LRQUIET,LRRANGE
 N LRRB,LRREF,LRRNLT,LRNX,LRSB,LRSBCOM,LRSCRP,LRSERUM
 N LRSM60,LRSN,LRSPEC,LRSQ,LRSS,LRSTR,LRSUB
 N LRSUFO,LRT,LRTN,LRTEST,LRTM60,LRTREA,LRTREAT
 N LRTST,LRTSTS,LRTYPE,LRUID,LRUNKNOW,LRURINE
 N LRUSUF0,LRVAL,LRVTS,LRVBY,LRVIDO,LRVIDOF,LRVTS
 N LRWRD,LRX,LRXCDT,LRXCNT,LRXPAR,LRXPROF,LRXTST,LRXUID
 N LRXTST,LRUSER,LWL,MANUAL,MSG,NOSTAT,OCXSEQ,ORO,P,PNM,R4
 N RESULT,S,S1,S2,SEGID,SEX,SSN,STAT,STATUS
 N SUB,T1,VA,VA200,VADM,VAERR,VAIN,VAL,VAPD,VERBY,VFDALERT
 N VFDFID,VFDCDUZVFDLRVARHOLD,X,X1,X11,X2,X3,XQA,Y
 N OCXAP,OCXCNT,OCXSEG
 ; ARRA II
 N VFDHL7MSG,VFDNP,LRNATURE
 ; NP test feature
 N VFDLPTST ; If defined - set test status to "NP"
 ;
 ;
EN2 ;
 S SAVELAHONEXIT=$G(SAVELAHONEXIT)
 S LRPROF=1,VFDHL7MSG=0,LREND=0
 D INIT(LRLL,LRPROF)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 D EXPAND
 ;
 D PROC(LRLL,LRISQN)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ; 2014/07/21-FHS
 ; Not Perform function added if ^LAH(LRLL,1,LRISQN,.1,"OBR","VFD-OBR-25")=X
 ; I $G(VFDNP),$G(LRAA),$G(LRAD),$G(LRAN) D  Q
 ;. D DATA68(LRAA,LRAD,LRAN)
 ;. S LRSPEC=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,5,1,0))
 ;2011/11/11--JDB
 ; Any results attached to this entry?
 ; Ignore/delete this LAH if no results.
 ; Prevents orders going to 'Complete' incorrectly, such as when
 ; an entire OBR has no real results due it's OBX-11="P".
 ; CH results start at subscript 2.
 I LRSS="CH" D  ;
 . ; Any results attached to this entry?
 . ; Ignore/delete this LAH if no results.
 . ; Prevents orders going to 'Complete' incorrectly.
 . ; CH results start at subscript 2
 . S X=$O(^LAH(LRLL,1,LRISQN,2),-1)
 . S X=$O(^LAH(LRLL,1,LRISQN,X))
 . I X Q
 . I '$G(SAVELAHONEXIT) D ZAPALL^LRVR3(LRLL,LRISQN)
 . S LREND="1^10^No results for OBR"
 ;
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) K ^TMP("LR",$J) Q LREND
 ;
 D DATA68(LRAA,LRAD,LRAN)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) K ^TMP("LR",$J) Q LREND
 ;
 D CHK(LRLL,LRISQN)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 D COM^VFDLRAVM(LRLL,LRISQN)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 ; 2011/07/23--JDB
 ; Added code to protect the LRTSTS array which seems to
 ; get killed somehow during the MOVE call.
 K VFDLRVARHOLD("LRTSTS")
 M VFDLRVARHOLD("LRTSTS")=LRTSTS
 D MOVE^VFDLRAVM(LRLL,LRISQN)
 I '$O(LRTSTS(0)) M LRTSTS=VFDLRVARHOLD("LRTSTS")
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 D LRDATA(LRDFN,LRSS,LRIDT,.LRDUZ,LRMETH)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 I LRSS'="SP" N CORRECT D NEW^LR7OB1(LRODT,LRSN,"RE",,.LRTSTS,)
 ;
 ;
 I LRSS'="SP" D XREF^LRVER3A
 I LRSS="SP" D
 . Q:+LRDPF'=2
 . S LRPRAC=$$PRAC^LRX($P(^LR(LRDFN,LRSS,LRIDT,0),U,10))
 . S ^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)=""
 . S ^LRO(69,9999999-LRIDT\1,1,"AL",$E(LRLLOC,1,15),$E(PNM,1,20),LRDFN)=""
 . S ^LRO(69,9999999-LRIDT\1,1,"AP",LRPRAC,$E(PNM,1,20),LRDFN)=""
 . S ^LRO(69,DT,1,"AN",$E(LRLLOC,1,15),LRDFN,LRIDT)=""
 . S ^LRO(69,DT,1,"AR",$E(LRLLOC,1,15),$E(PNM,1,20),LRDFN)=""
 ;
 ;
 D FID(LRODT,LRSN,LRTST,VFDFID)
 I $G(LREND) D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,$P(LREND,U,2,99)) Q LREND
 ;
 I '$P($G(^LRO(69,LRODT,1,LRSN,3)),U,2) D
 . N ERR,FDA,IEN
 . S IEN=LRSN_","_LRODT_","
 . S FDA(1,69.01,IEN,21)=$G(LRNT,$$NOW^XLFDT)
 . D FILE^DIE("","FDA(1)","ERR")
 ;
 ;COLLECTION DATE/TIME
 D
 . N DIERR,FDA,FILE,IEN,LRDFN,VFDERR
 . S IEN=LRSN_","_LRODT_","
 . S FDA(2,69.01,IEN,20)=LRARDT
 . D FILE^DIE("","FDA(2)","VFDERR")
 . K DIERR,IEN,FDA,VFDERR,FILE
 . S FILE=$$FILE(LRSS)
 . Q:FILE<1
 . S LRDFN=+$G(^LRO(69,LRODT,1,LRSN,0))
 . S IEN=LRIDT_","_LRDFN_","
 . I LRSS="CH" D  ;
 . . S FDA(3,FILE,IEN,.21601)=LRARDT
 . ;
 . I "^MI^CY^EM^SP^"[("^"_LRSS_"^") D  ;
 . . S FDA(3,FILE,IEN,.1)=LRARDT
 . ;
 . D FILE^DIE("KS","FDA(3)","VFDERR")
 ;
END ;
 ;
 ;This call will set test LRTSTS(X) to "NP status if LAH(LRLL,1,LRISQN,.1,"OBR","VFD-OBR-25")="X" ARRA II
 I $G(VFDNPTST) D
 . I $G(LRUID)="" Q
 . I '$O(LRTSTS(0)) Q
 . S LRNP=$$EN^VFDLRNP(LRUID,.LRTSTS)
 . I LRNP<1 D
 . . D:$G(VFDHL7MSG) LEDIERR(VFDHL7MSG,"Not Preform process error")
 . . S LREND="1^34^Not preform process error"
 ;
 ; Merge ^LR(LRDFN,LRSS,LRIDT,"VFDHLR",150)=^LAHM(62.49,VFDHL7MSG,150)
 ; Check ^LRO(68.2,LRLL,"VFD") to determine if ARRA II interface
 ; ^DD(68.2,21601,0)="ARRA II DATA^S^0:NO;1:YES;^VFD;1^Q"
 I +$G(^LRO(68.2,LRLL,"VFD")),$G(LRDFN),$G(LRSS)'="",$G(LRIDT) D
 . I $G(^LR(LRDFN,LRSS,LRIDT,0)),$G(VFDHL7MSG) D
 . . M ^LR(LRDFN,LRSS,LRIDT,"VFDHL7",150)=^LAHM(62.49,VFDHL7MSG,150)
 K ^TMP("LR",$J)
 I '$G(SAVELAHONEXIT) D ZAPALL^LRVR3(LRLL,LRISQN)
 Q LREND
 ;
 ;
CHK(LRLL,LRISQN) ;
 ;
 N LRC,LRD
 S LREND=0
 ;If this node is set to "X" - set LRTST to "NP" (Not preformed) EN^VFDLRNP(LRUID,.LRTST) ARRA II 
 S VFDNPTST=$S($G(^LAH(LRLL,1,LRISQN,.1,"OBR","VFD-OBR-25"))="X":1,1:0)
 ;
 Q:VFDNPTST
 Q:$G(LRSS)'="CH"
 S LRC=$O(^LAH(LRLL,1,LRISQN,1,0))
 S LRD=$O(^LAH(LRLL,1,LRISQN,1.9))
 I 'LRC&('LRD) D
 . S LREND="1^3^No Data or Comments"
 . D ZAPALL^LRVR3(LRLL,LRISQN)
 Q
 ;
 ;
INIT(LRLL,LRPROF) ;
 S (LRAN,LREND)=0
 S LRPROF=$G(LRPROF,1)
 S LWL=LRLL
 S LRCDEF=8053
 K LRPARAM
 S LRUSER=$$PRXYUSR^VFDLRU02("AUTOACCEPT",1)
 I 'LRUSER S LREND="1^1^No AutoAccept User" Q
 D DUZ^XUP(LRUSER)
 S VFDCDUZ=DUZ ; Collecting person
 S (LRPER,VA200)=""
 S LRINST=+$$SITE^VASITE
 S DUZ(2)=LRINST
 M LRDUZ=DUZ
 D EN^LRPARAM
 S LRLABKY="1^1^1^1"
 S (EAMODE,LRQUIET,DIQUIET,LRTYPE,LRPCEVSO)=1
 S LRX=$O(^LRO(68.2,LRLL,10,1,0))
 I 'LRX S LREND="1^2^No Profile Defined" Q
 S LRXPROF=^LRO(68.2,LRLL,10,LRX,0)
 S LRPANEL=$P(LRXPROF,U),LRAA=$P(LRXPROF,U,2)
 S LRANYAA=$P(LRXPROF,U,3)
 S LRLD=$P(^LRO(68,LRAA,0),U,19),LRLD=$S(LRLD'="":LRLD,1:"CP")
 S LRVBY=2,LRTYPE=0,LRMETH="AutoAccept"
 S LRORDR=""
 S LRX=$S(+$P($G(^LAB(69.9,1,0)),U,7):+$P(^(0),U,7),1:1)
 S LRTM60=9999999-$$FMADD^XLFDT(DT,-LRX)
 Q
 ;
 ;
EXPAND ;
 N LRI,LRX,LRVTS,LRORDR,LRTSTS
 S (LRLWC,LRORDR)="P"
 D EXPLODE^LRGP2
 Q
 ;
 ;
PROC(LRLL,LRISQN) ;
 ;
 N X
 K LRTSTS
 S LRUID=$G(^LAH(LRLL,1,LRISQN,.3))
 I LRUID="" S LREND="1^4^No UID defined" Q
 K LRNODE,LRAA,LRAD,LRAN
 S LRNT=$$NOW^XLFDT
 S LRNODE=^LAH(LRLL,1,LRISQN,0)
 S LRAA=$P(LRNODE,U,3)
 S LRAD=$P(LRNODE,U,4)
 S LRAN=$P(LRNODE,U,5)
 S VFDHL7MSG=+$P(LRNODE,U,13) ; Pointer to ^LAHM(62.49 message
 S LRTST=+$G(^LAH(LRLL,1,LRISQN,.1,"OBR","VFD-#60-IEN"))
 S LRSS=$P(^LAB(60,LRTST,0),U,4)
 S VFDFID=$G(^LAH(LRLL,1,LRISQN,.1,"OBR","FID"))
 S LRTSTS(LRTST)="",LRTSTS=1
 ;DSS/FHS - Set Not Perform flag
 N VFDNP
 S VFDNP=$S($G(^LAH(LRLL,1,LRISQN,.1,"OBR","VFD-OBR-25"))="X":1,1:0) ; (NP) not preform message ARRA II
 I $G(VFDNP) S X=$$EN^VFDLRNP(LRUID,.LRTSTS) ; Set test to NP status
 ;END OF MOD
 Q
 ;
 ;
DATA68(LRAA,LRAD,LRAN) ;
 ;
 K LRDPF
 S LRX=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LREND=0
 S LRDFN=+LRX
 D PT^LRX
 S LRODT=$P(LRX,U,4)
 S LRSN=$P(LRX,U,5)
 S LRLLOC=$P(LRX,U,7)
 S LRPRAC=$P(LRX,U,8)
 S LROLLOC=$P(LRX,U,13)
 S (LRCEN)=+$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.1))
 S LRXCDT=$P($G(^LRO(69,LRODT,1,LRSN,1)),U)
 S LRORD=$G(^LRO(69,LRODT,1,LRSN,.1))
 S LRORU3=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),U)
 I LRORU3'=LRUID S LREND="1^5^["_LRUID_"] {"_LRXUID_"}UID do not match" Q
 S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
 I '$D(^LR(LRDFN,LRSS,LRIDT,0)) D  Q
 . S LREND="1^6^No LR( setup for this accession"
 S LRARDT=+$G(^LRO(69,LRODT,1,LRSN,3))
ARDT ;68 Lab arrival time
 D
 . N FDA,ERR
 . S FDA(1,68.02,LRAN_","_LRAD_","_LRAA_",",12)=LRARDT
 . D FILE^DIE("KS","FDA(1)","ERR")
 Q
 ;
 ;
LRDATA(LRDFN,LRSS,LRIDT,LRDUZ,LRMETH) ;
 ;
 Q:'$G(^LR(LRDFN,LRSS,LRIDT,0))
 I $G(LRSS)="CH" D
 . N ERR,IEN,LRERR,LRFDA
 . S:LRMETH="" LRMETH="AutoAccept"
 . S IEN=LRIDT_","_LRDFN_","
 . S LRFDA(2,63.04,IEN,.03)=$G(LRNT,$$NOW^XLFDT)
 . S LRFDA(2,63.04,IEN,.04)=LRDUZ
 . S LRFDA(2,63.04,IEN,.08)=LRMETH
 . D FILE^DIE("","LRFDA(2)","LRERR")
 ;DSS/FHS - MOD TO CALL PXRMINDX  5/29/14
 I LRSS'="CH" D UPDATE^LRPXRM(LRDFN,LRSS,LRIDT)
 ;END OF MOD
 Q
 ;
 ;
SETPL(LRDFN,LRSS,LRIDT,LRINST) ;
 ;
 N LRFDA,LRFILE
 ;
 S:LRINST="" LRINST=70
 S LRFILE=$$FILE(LRSS)
 Q:LRFILE<1
 I $S(LRSS="MI":1,LRSS="AU":1,1:0) D UPDATE^LRPXRM(LRDFN,LRSS,LRIDT)
 I LRSS='"AU" D
 . S LRFDA(1,LRFILE,LRIDT_","_LRDFN_",",.345)=LRINST
 I LRSS="AU" D
 . S LRFDA(1,LRFILE,LRDFN_",",14.91)=LRINST
 D:$D(LRFDA) FILE^DIE("","LRFDA(1)","LRERR")
 Q
 ;
 ;
FILE(LRSS) ;
 I LRSS="CH" Q 63.04
 I LRSS="MI" Q 63.05
 I LRSS="SP" Q 63.08
 I LRSS="CY" Q 63.09
 I LRSS="EM" Q 63.02
 I LRSS="AU" Q 63
 Q 0
 ;
 ;
FID(LRODT,LRSN,LRTST,FID) ;
 ;
 Q:FID=""
 N BLK,ERR,FDA,FILE,IEN,STR,TST
 S LRDFN=+$G(^LRO(69,LRODT,1,LRSN,0))
 Q:'LRDFN
 S LRPRAC=$P(^LRO(69,LRODT,1,LRSN,0),U,6)
 ;69
 S BLK="          ",FID=FID_$E(BLK,$L(FID),10)
 S TST=+$O(^LRO(69,LRODT,1,LRSN,2,"B",LRTST,0))
 Q:'TST
 Q:'$D(^LRO(69,LRODT,1,LRSN,2,TST,0))  S STR=^(0)
 S FDA(1,69.03,TST_","_LRSN_","_LRODT_",",16)=FID
 D FILE^DIE("KSE","FDA(1)","ERR")
 S LRAD=$P(STR,U,3),LRAA=$P(STR,U,4),LRAN=$P(STR,U,5)
 S LRORIFN=+$P(STR,U,7) I LRORIFN D  ;CPRS Update
 . Q:'$G(^OR(100,LRORIFN,0))
 . N VAL
 . S VAL=$S($G(STATUS(1))="P":9,1:2) ; 9=Partial/prelim report 2=Final
 . D STATUS^ORCSAVE2(LRORIFN,VAL)
 . I LRSS="SP" D
 . . S VAL=$G(^OR(100,LRORIFN,4)) Q:VAL=""
 . . S ^OR(100,LRORIFN,4)=$P(VAL,";",1,3)_";"_LRSS_";"_LRIDT
 . S LRPRAC(+$G(LRPRAC))=""
 . I $S(LRSS="SP":1,$G(VFDALERT)=14:1,1:0) D ALERT(VFDALERT,LRDFN,LRORIFN,.LRPRAC,$G(MSG)) ;Fire CPRS Alert
 I LRAD,LRAA,LRAN D
 . S FDA(2,68.02,LRAN_","_LRAD_","_LRAA_",",16.3)=FID
 . D FILE^DIE("KS","FDA(2)","ERR")
 . S LRSS=$P(^LRO(68,LRAA,0),U,2)
 . S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
 . I $D(^LR(LRDFN,LRSS,LRIDT,0)) D
 . . S FILE=$$FILE(LRSS)
 . . Q:FILE<1
 . . I LRSS="CH" D
 . . . S FDA(1,FILE,LRIDT_","_LRDFN_",",.34)=FID
 . . . D FILE^DIE("KS","FDA(1)","ERR")
 . . I LRSS'="CH" S $P(^LR(LRDFN,LRSS,LRIDT,"ORU"),U,4)=FID
 Q
 ;
 ;
ISAAON(LRWL) ;Determine load worklist is set for auto-verify
 ;
 ; Input 
 ; LRWL = Pointer to 68.2
 ;
 ; Output
 ; 1 if on or 0 if off
 Q +$G(^LRO(68.2,LRWL,"AV"))
 ;
 ;
ALERT(VFDALERT,LRDFN,LRORIFN,VFDPRAC,MSG) ;Fire alert
 Q:$P(^LR(LRDFN,0),U,2)'=2
 Q:LRORIFN<1
 N DATA,DFN,LRSS
 S DFN=+$P($G(^LR(LRDFN,0)),U,3),LRORIFN=+LRORIFN
 S:$G(LRPRAC) VFDPRAC(LRPRAC)=""
 S LRSS=$P($G(^OR(100,LRORIFN,4)),";",4)
 Q:LRSS=""
 ;I LRSS="CH" D
 ;. S:MSG="" MSG="VFD Abnormal Laboratory Result"
 ;. S VFDALERT=14
 I "SPCYEM"[LRSS D  Q  ; changed to include CY and EM 7/27/12 RAF
 . S LRA=$G(^LR(LRDFN,LRSS,LRIDT,0))
 . D LAB^ORB3LAB(DFN,LRDFN,LRIDT,$G(LRA),LRSS,.XQA)
 . ;see original alert call used in LRAPRES1
 I LRSS="MI" D
 . S:MSG="" MSG="VFD Corrected Microbiology Report Available"
 . S:'VFDALERT VFDALERT=14
 S DATA=LRORIFN_"@OR|"_^OR(100,LRORIFN,4)_"@LRCH"
 ; this functionality is ONLY fired if change status is preformed.
 D EN^ORB3(VFDALERT,DFN,LRORIFN,.VFDPRAC,MSG,DATA)
 Q
LEDIERR(VFDHL7MSG,TXT) ; Process LEDI error message
 ; Only LEDI processed message will have VFDHL7MSG defined.
 ; TXT=ERROR CODE #^ERROR MSG TXT
 ; VFDHL7MSG=Pointer 62.49 message being processed = LA76249 variable
 ; Call with LA76248 - Pointer to ^LAHM(62.48
 ; Call LA7 MESSAGE LOG BULLETINS CODE #48
 Q:'$G(TXT)
 I $G(VFDHL7MSG),$G(^LAHM(62.49,$G(VFDHL7MSG),0)) D
 . N LA7MSATM
 . S LA7MSATM=$P(TXT,U,2)
 . D CREATE^LA7LOG(48)
 Q
