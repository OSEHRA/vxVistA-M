VFDPXMAS ;CFS - Build and Pass to auto-check-out ;05/22/2013
 ;;2011.1.3;DSS,INC VXVISTA OPEN SOURCE;**1**;08 Aug 2013;Build 2
 ;Copyright 1995-2013,Document Storage Systems Inc. All Rights Reserved
 ;;Copyright 1995-2013,Document Storage Systems Inc. All Rights Reserved
 ; Builds and passes data to MAS for Auto-checkout
 ;Variable List
 ;
EN1 ;Build the Temp global for MAS AND THE WORLD.
 ;S PXKGN=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_","
 ;^TMP("PXKCO",$J,<VISIT IEN>,"PRV",<PROVIDER ien>,0,"AFTER")=DATA
 ;  ""                 ""                     ""    ,"BEFORE")=DATA
 N PXKGG,PXKSUB,PXKMOD,PXKSEQ,PXKOE ;PX*1.0*164
 Q:PXKSOR=$O(^PX(839.7,"B","PIMS CHECK-OUT",0))
 S PXKGG=0
 S PXKSUB=""
 F  S PXKSUB=$O(PXKAFT(PXKSUB)) Q:PXKSUB=""  D
 . I PXKSUB'=1 D PXGO Q
 . S PXKSEQ=""
 . F  S PXKSEQ=$O(PXKAFT(PXKSUB,PXKSEQ)) Q:PXKSEQ=""  D
 .. S PXKMOD=PXKAFT(PXKSUB,PXKSEQ)
 .. D PXGO
 Q
PXGO ;
 S PXKGG=0
 S PXKGN=$P($T(GLOBAL^@PXKRTN),";;",2)_PXKPIEN_","
 I PXKSUB'=1 D
 . I $D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE")) S PXKGG=1
 . S PXKGN=PXKGN_PXKSUB_")"
 I PXKSUB=1 D
 . I PXKMOD]"",$D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE",PXKMOD)) S PXKGG=1
 . S PXKGN=PXKGN_PXKSUB_","_PXKSEQ_","_0_")"
 D @$S(PXKGG=1:"DUP",1:"ORG")
 D DEL
 D PTR
 Q
 ;
DUP ;Overwrite if a duplicate just the After Node
 I PXKSUB'=1 D  Q
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER")=$G(@PXKGN)
 I $G(@PXKGN)]"" D
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER",$G(@PXKGN))=""
 Q
 ;
ORG ;If original copy both
 I PXKSUB'=1 D  Q
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER")=$G(@PXKGN)
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE")=$G(PXKBEF(PXKSUB))
 I $G(@PXKGN)]"" D
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"AFTER",$G(@PXKGN))=""
 I $G(PXKBEF(PXKSUB,PXKSEQ))]"" D
 . S ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,PXKSUB,"BEFORE",PXKBEF(PXKSUB,PXKSEQ))=""
 Q
 ;
DEL ;DELETE IF BOTH ARE NULL
 I '$D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0)) D
 .K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
 I $G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"AFTER"))']"" D
 .I $G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"BEFORE"))']"" D
 ..K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
 I $P($G(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN,0,"AFTER")),"^",1)="@" D
 .K ^TMP("PXKCO",$J,PXKVST,PXKCAT,PXKPIEN)
 Q
 ;
PTR ; Set the Provider Narrative equal to the pointer in the files etc.
 N PXJ,PXJJ,PXJJJ,PXKR
 I $D(PXKPTR) S PXJ="" F  S PXJ=$O(PXKPTR(PXJ)) Q:PXJ=""  D
 .S PXJJ=""  F  S PXJJ=$O(PXKPTR(PXJ,PXJJ)) Q:PXJJ=""  D
 ..S PXJJJ="" F  S PXJJJ=$O(PXKPTR(PXJ,PXJJ,PXJJJ)) Q:PXJJJ=""  D
 ...S PXKR=$P($T(GLOBAL^@PXKRTN),";;",2)_PXJ_","_PXJJ_")"
 ...I $D(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXJ,PXJJ,"AFTER")) D
 ....S $P(^TMP("PXKCO",$J,PXKVST,PXKCAT,PXJ,PXJJ,"AFTER"),"^",PXJJJ)=$P($G(@PXKR),"^",PXJJJ)
 Q
